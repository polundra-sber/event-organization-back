openapi: 3.1.0
info:
  title: "Сервис помощи организации частных мероприятий"
  description: Тип - веб-приложение. Задачи - позволяет пользователям совместно планировать события, делить задачи, распределять расходы и отслеживать обязательства.
  version: 1.0.0
servers:
  - url: 'https'
security:
  - BearerAuth: []


# Добавленные теги
tags:
  - name: Authentication
    description: Регистрация, авторизация и управление аккаунтом
  - name: Profile
    description: Управление профилем пользователя
  - name: Home page
    description: Список мероприятий
  - name: Participants list
  - name: Purchase list
  - name: Task list
  - name: Stuff list
  - name: Cost allocation list
  - name: Cost list
  - name: My debts
  - name: My incomes
  - name: My purchases
  - name: My tasks
  - name: My stuffs
  - name: User metadata
    description: Получение роли пользователя и статуса мероприятия
  - name: Ignored


paths:
  /events/{event_id}/user-metadata:
    get:
      tags:
        - User metadata
      operationId: getUserMetadata
      summary: Получить роль пользователя в данном мероприятии и статус мероприятия
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Роль и статус
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUserMetadata'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  # auth
  /auth/register:
    post:
      tags:
        - Authentication
      operationId: createUser
      security: []  # отключает аутентификацию для этого endpoint'а
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '409':
          description: Пользователь уже зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      operationId: login
      security: []  # отключает аутентификацию для этого endpoint'а
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '201':
          description: Пользователь авторизовался
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '401':
          description: Пользователь указал неверный логин или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUnsuccessResponse'

  # events

  /events:
    get:
      tags:
        - Home page
      operationId: getEvents
      summary: Получить список мероприятий
      description: Возвращает список всех мероприятий пользователя
      responses:
        '200':
          description: Список мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /create-event:
    post:
      tags:
        - Home page
      operationId: createEvent
      summary: Создать новое мероприятие
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEditor'
      responses:
        '201':
          description: Мероприятие успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /find-event/{event_id}:
    get:
      tags:
        - Home page
      operationId: findEventById
      summary: Поиск мероприятия по идентификатору
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Карточка мероприятия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPreview'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /join-event-request/{event_id}:
    post:
      tags:
        - Home page
      operationId: sendJoinEventRequest
      summary: Отправка заявки для присоединения к мероприятию
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Заявка на присоединение отправлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessEventJoining'
        '409':
          description: Повторное присоединение к мероприятию
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSecondJoining'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  #profile

  /profile:
    get:
      tags:
        - Profile
      operationId: getUserProfile
      summary: Вход в личный профиль
      responses:
        '200':
          description: Данные профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    patch:
      tags:
        - Profile
      operationId: editUserProfile
      summary: Редактирование профиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEditor'
      responses:
        '201':
          description: Данные профиля изменены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditor'
        '409':
          description: Пользователь с такой почтой уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistResponse'

  # this event

  /leave-event/{event_id}:
    delete:
      tags:
        - Home page
      operationId: leaveEvent
      summary: Участник или организатор покидает мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Участник или организатор покинул мероприятие
        '410':
          description: Не удалось покинуть мероприятие
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /delete-event/{event_id}:
    delete:
      tags:
        - Home page
      operationId: deleteEvent
      summary: Создатель удаляет мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Создатель удалил мероприятие
        '410':
          description: Не удалось удалить мероприятие

  /complete-event/{event_id}:
    patch:
      tags:
        - Home page
      operationId: completeEvent
      summary: Создатель завершает мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Создатель успешно завершил мероприятие
        '410':
          description: Не удалось завершить мероприятие

  /events/{event_id}:
    get:
      tags:
        - Home page
      operationId: getEventById
      summary: Зайти в карточку мероприятия
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Данные мероприятия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Мероприятие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'


  /events/{event_id}/edit:
    patch:
      tags:
        - Home page
      operationId: editEvent
      summary: Создатель редактирует мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEditor'
      responses:
        '201':
          description: Данные мероприятия изменены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEditor'

  # participants list
  /events/{event_id}/participants-list:
    get:
      tags:
        - Participants list
      operationId: getEventParticipantsList
      summary: Получить список участников мероприятия
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      description: Возвращает список всех участников мероприятия
      responses:
        '200':
          description: Participants list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '410':
          description: Не удалось просмотреть список участников

  /events/{event_id}/participants-list/add-participant:
    get:
      tags:
        - Participants list
      operationId: searchUsers
      summary: Найти 10 пользователей для добавления
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: query
          name: text
          required: true
          description: Текст из поисковой строки
          schema:
            type: string
        - in: query
          name: seq
          required: true
          description: Порядковый номер "пачки" участников
          schema:
            type: integer
      responses:
        '200':
          description: Пачка из 10 участников
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDemo'
        '400':
          description: Неверные параметры запроса
        '404':
          description: Пользователь не найден
    post:
      tags:
        - Ignored
        - Participants list
      operationId: addParticipantsToParticipantsList
      summary: Добавить выбранных участников
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantsRequest'
      responses:
        '200':
          description: Участники успешно добавлены
        '400':
          description: Неверный формат данных или некорректные логины
        '404':
          description: Событие не найдено

  /events/{event_id}/participants-list/{participant_login}/delete-participant:
    delete:
      tags:
        - Participants list
      operationId: deleteParticipantFromParticipantsList
      summary: Удалить пользователя из списка участников
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: participant_login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Участник ликвидирован
        '400':
          description: Неверные параметры запроса
        '404':
          description: Пользователь не найден

  /events/{event_id}/participants-list/{participant_login}/change-participant-role:
    patch:
      tags:
        - Participants list
      operationId: changeParticipantRole
      summary: Изменить роль на организатора/участника
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: participant_login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Новая роль участника
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    example: "организатор"
        '403':
          description: Недостаточно прав для изменения роли
        '404':
          description: Пользователь не найден

  # purchases list
  /events/{event_id}/purchases-list:
    get:
      tags:
        - Purchase list
      operationId: getPurchasesList
      summary: Получить список покупок
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Purchase list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/purchases-list/add-purchase:
    post:
      tags:
        - Purchase list
      operationId: addPurchaseToPurchasesList
      summary: Добавить новую позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseListItemCreator'
      responses:
        '201':
          description: Позиция покупки успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/purchases-list/{purchase_id}/edit-purchase:
    patch:
      tags:
        - Purchase list
      operationId: editPurchaseInPurchasesList
      summary: Изменить позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseListItemEditor'
      responses:
        '200':
          description: Позиция покупки успешно изменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/purchases-list/{purchase_id}/delete-purchase:
    delete:
      tags:
        - Purchase list
      operationId: deletePurchaseFromPurchasesList
      summary: Удалить позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Позиция покупки успешно удалена
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/purchases-list/{purchase_id}/take-purchase:
    patch:
      tags:
        - Purchase list
      operationId: takePurchaseFromPurchasesList
      summary: Пользователь берет позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ответственный за покупку успешно изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  # cost alloc list

  /events/{event_id}/cost-allocation-list:
    get:
      tags:
        - Cost allocation list
      operationId: getCostAllocationList
      summary: Получить список распределения расходов
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost allocation list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostAllocationListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/cost-allocation-list/{purchase_id}/participants:
    get:
      tags:
        - Cost allocation list
      operationId: getParticipantsForPurchaseFromCostAllocationList
      summary: Получить список участников для данной покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participants list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDemo'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'
    delete:
      tags:
        - Ignored
        - Cost allocation list
      operationId: deleteParticipantsForPurchaseFromCostAllocationList
      summary: Удаление участников для данной покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                description: Логин участника
                type: string
                minLength: 3
                maxLength: 20
                example: main_player
      responses:
        '200':
          description: Участники успешно добавлены
        '400':
          description: Неверный формат данных или некорректные логины
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'


  /events/{event_id}/cost-allocation-list/{purchase_id}/add-participants:
    post:
      tags:
        - Ignored
        - Cost allocation list
      operationId: addParticipantsForPurchaseFromCostAllocationList
      summary: Добавить выбранных участников для покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                description: Логин участника
                type: string
                minLength: 3
                maxLength: 20
                example: main_player
      responses:
        '200':
          description: Участники успешно добавлены
        '400':
          description: Неверный формат данных или некорректные логины
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/cost-allocation-list/send-cost-allocation-list:
    post:
      tags:
        - Cost allocation list
      operationId: sendCostAllocationList
      summary: Отправить расчет
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      description: Бэк меняет статус cost_allocated на true (окончательное распределение расходов)
      responses:
        '200':
          description: Сохранили окончательный расчет
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  # stuffs list

  /events/{event_id}/stuffs-list:
    get:
      tags:
        - Stuff list
      operationId: getStuffsList
      summary: Получить список вещей
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Stuff list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StuffListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/stuffs-list/add-stuff:
    post:
      tags:
        - Stuff list
      operationId: addStuffToStuffsList
      summary: Добавить новую позицию вещь
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StuffListItemCreator'
      responses:
        '201':
          description: Позиция вещи успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StuffListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/stuffs-list/{stuff_id}/edit-stuff:
    patch:
      tags:
        - Stuff list
      operationId: editStuffInStuffsList
      summary: Изменить позицию вещи
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: stuff_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StuffListItemEditor'
      responses:
        '200':
          description: Позиция вещи успешно изменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StuffListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/stuffs-list/{stuff_id}/delete-stuff:
    delete:
      tags:
        - Stuff list
      operationId: deleteStuffFromStuffsList
      summary: Удалить позицию вещи
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: stuff_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Позиция вещи успешно удалена
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/stuffs-list/{stuff_id}/take-stuff:
    patch:
      tags:
        - Stuff list
      operationId: takeStuffFromStuffsList
      summary: Пользователь берет позицию вещи
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: stuff_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ответственный за вещь успешно изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StuffListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'


  # task list

  /events/{event_id}/tasks-list:
    get:
      tags:
        - Task list
      operationId: getTasksList
      summary: Получить список задач
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task list
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_date:
                    type: string
                    format: date
                    description: Дата проведения мероприятия
                  event_time:
                    type: string
                    format: time
                    example: 16:00
                    description: Время проведения мероприятия
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaskListItem'
                required:
                  - event_date
                  - tasks
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/tasks-list/add-tasks:
    post:
      tags:
        - Task list
      operationId: addTaskToTasksList
      summary: Добавить новую задачу
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListItemCreator'
      responses:
        '201':
          description: Задача успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/tasks-list/{task_id}/edit-task:
    patch:
      tags:
        - Task list
      operationId: editTaskInTasksList
      summary: Изменить задачу
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListItemEditor'
      responses:
        '200':
          description: Позиция вещи успешно изменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/tasks-list/{task_id}/delete-task:
    delete:
      tags:
        - Task list
      operationId: deleteTaskFromTasksList
      summary: Удалить задачу
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Задача успешно удалена
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/tasks-list/{task_id}/take-task:
    patch:
      tags:
        - Task list
      operationId: takeTaskFromTasksList
      summary: Пользователь берет задачу
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ответственный за задачу успешно изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  # cost list
  /events/{event_id}/cost-list:
    get:
      tags:
        - Cost list
      operationId: getCostList
      summary: Получить список расходов
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost list
          content:
            application/json:
              schema:
                type: object
                properties:
                  cost_allocation_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/CostAllocationListItem'
                  expenses-existence: #смотрим по таблице покупок с таким event_id
                    type: boolean
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/cost-list/{purchase_id}/participants:
    get:
      tags:
        - Cost list
      operationId: getParticipantsForPurchaseFromCostList
      summary: Получить список участников для данной покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participants list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDemo'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'

  /events/{event_id}/purchases-list/{purchase_id}/get-receipt:
    get:
      tags:
        - Ignored
        - Cost list
        - Cost allocation list
        - My purchases
      operationId: getReceiptsForPurchase
      summary: Получить чек покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Фото чека покупки
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ReceiptList'
              encoding:
                files:
                  contentType: image/jpeg
                  explode: true
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'


  /events/{event_id}/cost-list-personal:
    get:
      tags:
        - Cost list
      operationId: getPersonalCostList
      summary: Получить список расходов по текущему пользователю
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostAllocationListItem'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotExistResponse'


  # my purchases list
  /my-purchases-list:
    get:
      tags:
        - My purchases
      operationId: getMyPurchasesList
      summary: Получить список мои покупки
      responses:
        '200':
          description: My purchases
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_login:
                    type: string
                    description: login пользователя, получающего список
                  purchases:
                    type: array
                    items:
                      $ref: '#/components/schemas/MyPurchaseListItem'
                required:
                  - user_login
                  - purchases



  /my-purchases-list/{purchase_id}/deny-purchase:
    delete:
      tags:
        - My purchases
      operationId: denyPurchaseInMyPurchasesList
      summary: Отказаться от покупки
      parameters:
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Вы успешно отказались от покупки
        '404':
          description: Покупка с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseNotExistResponse'


  /my-purchases-list/{purchase_id}/edit-purchase-cost:
    patch:
      tags:
        - My purchases
      operationId: editPurchaseCostInMyPurchasesList
      summary: Изменить стоимость покупки
      parameters:
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cost:
                  type: number
                  format: float
                  example: 123.99
      responses:
        '200':
          description: Стоимость покупки успешно изменена
        '404':
          description: Покупка с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseNotExistResponse'

  /my-purchases-list/{purchase_id}/add-receipt:
    post:
      tags:
        - My purchases
      operationId: addReceiptForPurchaseInMyPurchasesList
      summary: Прикрепить чек к позициям покупок
      parameters:
        - in: path
          name: purchase_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReceiptList'
      responses:
        '201':
          description: Чек успешно прикреплен к покупке
        '404':
          description: Покупка с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseNotExistResponse'



  # my tasks list
  /my-tasks-list:
    get:
      tags:
        - My tasks
      operationId: getMyTasksList
      summary: Получить список мои задачи
      responses:
        '200':
          description: My tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyTaskListItem'

  /my-tasks-list/{task_id}/deny-task:
    delete:
      tags:
        - My tasks
      operationId: denyTaskInMyTasksList
      summary: Отказаться от задачи
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Вы успешно отказались от задачи
        '404':
          description: Задача с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotExistResponse'



  /my-tasks-list/{task_id}/mark-task-completed:
    patch:
      tags:
        - My tasks
      operationId: markTaskCompletedInMyTasksList
      summary: Пользователь отмечает задачу выполненной
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Статус задачи успешно изменен
        '404':
          description: Задача с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotExistResponse'


  # my stuffs list
  /my-stuffs-list:
    get:
      tags:
        - My stuffs
      operationId: getMyStuffsList
      summary: Получить список моих вещей
      responses:
        '200':
          description: My stuffs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyStuffListItem'


  /my-stuffs-list/{stuff_id}/deny-stuff:
    delete:
      tags:
        - My stuffs
      operationId: denyStuffInMyStuffsList
      summary: Отказаться от вещи
      parameters:
        - in: path
          name: stuff_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Вы успешно отказались от вещи
        '404':
          description: Вещь с данным идентификатором не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StuffNotExistResponse'

  # my debts
  /my-debts-list:
    get:
      tags:
        - My debts
      operationId: getMyDebtsList
      summary: Получить список моих долгов
      responses:
        '200':
          description: My debts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyDebtListItem'

  /my-debts-list/{debt_id}/mark-debt-paid:
    patch:
      tags:
        - My debts
      operationId: markDebtPaidInMyDebtsList
      summary: Пользователь отмечает долг оплаченным
      parameters:
        - in: path
          name: debt_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Долг успешно отмечен оплаченным
        '404':
          description: Долг с данным идентификатором не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtNotExistResponse'


  # my incomes
  /my-incomes-list:
    get:
      tags:
        - My incomes
      operationId: getMyIncomesList
      summary: Получить список мне должны
      responses:
        '200':
          description: My incomes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyIncomeListItem'

  /my-incomes-list/{debt_id}/mark-income-received:
    patch:
      tags:
        - My incomes
      operationId: markIncomeReceivedInMyIncomesList
      summary: Пользователь отмечает долг полученным
      parameters:
        - in: path
          name: debt_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Долг успешно отмечен полученным
        '404':
          description: Долг с данным идентификатором не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtNotExistResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    ReceiptList:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: Массив фото чеков

    AddParticipantsRequest:
      type: array
      items:
        type: string
        minLength: 3
        maxLength: 20
        example: main_player

    SuccessEventJoining:
      type: string
      example: "Заявка успешно отправлена"

    EventSecondJoining:
      type: object
      properties:
        error:
          type: string
          default: "Вы уже присоединены к данному мероприятию"

    EventNotExistResponse:
      type: object
      properties:
        error:
          type: string
          description: Подробное описание ошибки

    PurchaseNotExistResponse:
      type: object
      properties:
        error:
          type: string
          description: Подробное описание ошибки

    StuffNotExistResponse:
      type: object
      properties:
        error:
          type: string
          description: Подробное описание ошибки

    TaskNotExistResponse:
      type: object
      properties:
        error:
          type: string
          description: Подробное описание ошибки

    DebtNotExistResponse:
      type: object
      properties:
        error:
          type: string
          description: Подробное описание ошибки

    UserLogin:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password

    AuthSuccessResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT токен пользователя

    UserAlreadyExistResponse:
      type: object
      properties:
        error:
          type: string
          description: 1) Пользователь с таким логином уже существует. 2) Пользователь с такой почтой уже существует.

    AuthUnsuccessResponse:
      type: object
      properties:
        error:
          type: string
          description: Неверный логин или пароль

    # Мероприятие
    Event:
      type: object
      required:
        - event_id
        - event_name
        - event_date
        - role_name
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        event_description:
          type: string
          maxLength: 254
          example: Берите пледы и хорошее настроение!
          default: "Описание не добавлено"
        event_status_name:
          type: string
          example: активно
        location:
          type: string
          maxLength: 100
          example: Центральный парк
          default: "место не указано"
        event_date:
          type: string
          format: date
          example: "2025-06-12"
          description: Дата в формате YYYY-MM-DD
        event_time:
          type: string
          format: time
          example: "16:00"
          x-format: HH:MM  #кастомное расширение
          default: "время не указано"
        chat_link:
          type: string
          maxLength: 32
          example: "https://t.me/chat_id"
          default: "не прикреплена"
        role_name:
          type: string
          example: "участник"

    EventPreview:
      type: object
      required:
        - event_id
        - event_name
        - event_date
        - event_status_name
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        event_status_name:
          type: string
          example: активно
        location:
          type: string
          maxLength: 100
          example: Центральный парк
          default: "место не указано"
        event_date:
          type: string
          format: date
          example: "2025-06-12"
          description: Дата в формате YYYY-MM-DD
        event_time:
          type: string
          format: time
          example: "16:00"
          x-format: HH:MM  #кастомное расширение
          default: "время не указано"

    # Редактирование мероприятия
    EventEditor:
      type: object
      required:
        - event_name
        - event_date
      properties:
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        event_description:
          type: string
          maxLength: 254
          example: Берите пледы и хорошее настроение!
          default: "Описание не добавлено"
        location:
          type: string
          maxLength: 100
          example: Центральный парк
          default: "место не указано"
        event_date:
          type: string
          format: date
          example: "2025-06-12"
          description: Дата в формате YYYY-MM-DD
        event_time:
          type: string
          format: time
          example: "16:00"
          x-format: HH:MM  #кастомное расширение
          default: "время не указано"
        chat_link:
          type: string
          maxLength: 32
          example: "https://t.me/chat_id"
          default: "не прикреплена"

    # Пользователь
    EventUserMetadata:
      type: object
      properties:
        role_name:
          type: string
          example: "участник"
        event_status_name:
          type: string
          example: "активно"

    User:
      type: object
      properties:
        login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        role_name:
          type: string
          example: создатель
        password:
          type: string
          minLength: 8
          maxLength: 20
          example: An1@!#fhv11
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"
      required:
        - login
        - role_name
        - email
        - name
        - surname

    UserProfile:
      type: object
      required:
        - login
        - email
        - name
        - surname
      properties:
        login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"

    UserEditor:
      type: object
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"

    UserDemo:
      type: object
      properties:
        login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
      required:
        - login
        - email
        - name
        - surname


    # Задача
    TaskListItem:
      type: object
      required:
        - task_id
        - task_name
        - task_status_name
        - deadline_date
      properties:
        task_id:
          type: integer
          example: 143
        task_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Заказать торт
        task_description:
          type: string
          maxLength: 254
          example: Торт без орехов и без апельсина
          default: "Описание не добавлено"
        task_status_name:
          type: string
        responsible_login:
          type: string
        responsible_name:
          type: string
        responsible_surname:
          type: string
        deadline_date:
          type: string
          format: date
        deadline_time:
          type: string
          format: time
          example: 16:00

    TaskListItemCreator:
      type: object
      properties:
        task_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Заказать торт
        task_description:
          type: string
          maxLength: 254
          example: Торт без орехов и без апельсина
          default: "Описание не добавлено"
        responsible_login:
          type: string
        deadline_date:
          type: string
          format: date
          example: 12.06.2025
        deadline_time:
          type: string
          format: time
          example: 16:00
      required:
        - task_name

    TaskListItemEditor:
      type: object
      properties:
        task_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Заказать торт
        task_description:
          type: string
          maxLength: 254
          example: Торт без орехов и без апельсина
          default: "Описание не добавлено"
        responsible_login:
          type: string
        deadline_date:
          type: string
          format: date
          example: 12.06.2025
        deadline_time:
          type: string
          format: time
          example: 16:00



    # Покупка в списке
    PurchaseListItem:
      type: object
      properties:
        purchase_id:
          type: integer
          example: 1
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        purchase_description:
          type: string
          maxLength: 254
          example: Купите 2кг
        responsible_login:
          type: string
          example: main_player
        responsible_name:
          type: string
        responsible_surname:
          type: string
      required:
        - purchase_id
        - purchase_name

    PurchaseListItemCreator:
      type: object
      properties:
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        purchase_description:
          type: string
          maxLength: 254
          example: Купите 2 кг
        responsible_login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
      required:
        - purchase_name

    PurchaseListItemEditor:
      type: object
      properties:
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        purchase_description:
          type: string
          maxLength: 254
          example: Купите 2 кг
        responsible_login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player

    CostAllocationListItem:
      type: object
      properties:
        purchase_id:
          type: integer
          example: 1
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        responsible_name:
          type: string
        responsible_surname:
          type: string
        cost:
          type: number
          format: float
          example: 123.99
        hasReceipt:
          type: boolean
        countParticipants:
          type: integer
          example: 2
      required:
        - purchase_id
        - purchase_name
        - cost
        - hasReceipt

    # Чек
    Receipt:
      type: object
      properties:
        receipt_id:
          type: integer
          example: 1
        file_path:
          type: string
          example: /home/user1234/public_html/images/file.png
      required:
        - receipt_id
        - file_path

    # Пользователи-мероприятия
    EventUserList:
      type: object
      properties:
        event_user_list_id:
          type: integer
          example: 1
        event_id:
          type: integer
          example: 1123
        user_id:
          type: integer
          example: 1123
        role_name:
          type: string
          example: участник
      required:
        - event_user_list_id
        - event_id
        - user_id
        - role_name

    # Вещь
    StuffListItem:
      type: object
      required:
        - stuff_id
        - stuff_name
      properties:
        stuff_id:
          type: integer
        stuff_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Веревка
        stuff_description:
          type: string
          maxLength: 254
          example: 5 метров, канатная
          default: "Описание не добавлено"
        responsible_login:
          type: string
        responsible_name:
          type: string
        responsible_surname:
          type: string

    StuffListItemCreator:
      type: object
      properties:
        stuff_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Веревка
        stuff_description:
          type: string
          maxLength: 254
          example: 5 метров, канатная
          default: "Описание не добавлено"
        responsible_login:
          type: string
      required:
        - stuff_name

    StuffListItemEditor:
      type: object
      properties:
        stuff_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Веревка
        stuff_description:
          type: string
          maxLength: 254
          example: 5 метров, канатная
          default: "Описание не добавлено"
        responsible_login:
          type: string


    # Позиции в моих списках
    MyPurchaseListItem:
      type: object
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        purchase_id:
          type: integer
          example: 1
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        responsible_name:
          type: string
          example: Ваня
        responsible_surname:
          type: string
          example: Огурцов
        responsible_login:
          type: string
        cost:
          type: number
          format: float
          example: 123.99
        purchase_description:
          type: string
          maxLength: 254
          example: Купите 2кг
        has_receipt:
          type: boolean
      required:
        - purchase_id
        - purchase_name
        - event_id
        - event_name
        - responsible_login
        - responsible_name
        - responsible_surname

    MyTaskListItem:
      type: object
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        task_id:
          type: integer
          example: 143
        task_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Заказать торт
        deadline_date:
          type: string
          format: date
          example: 12.06.2025
        deadline_time:
          type: string
          format: time
          example: 16:00
        task_description:
          type: string
          maxLength: 254
          example: Торт без орехов и без апельсина
          default: "Описание не добавлено"
        task_status_name:
          type: string
          default: не выполнена
      required:
        - task_id
        - task_name
        - event_id
        - event_name
        - deadline_date
        - task_status_name

    MyStuffListItem:
      type: object
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        stuff_id:
          type: integer
        stuff_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Веревка
        stuff_description:
          type: string
          maxLength: 254
          example: 5 метров, канатная
          default: "Описание не добавлено"
      required:
        - event_id
        - event_name
        - stuff_id
        - stuff_name

    MyDebtListItem:
      type: object
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        debt_id:
          type: integer
        recipient_login:
          type: string
        recipient_name:
          type: string
        recipient_surname:
          type: string
        comment_money_transfer:
          type: string
        debt_status_name:
          type: string
          default: не оплачен
        debt_amount:
          type: number
          format: float
          minimum: 0
          example: 123.50
      required:
        - event_id
        - event_name
        - debt_id
        - recipient_login
        - recipient_name
        - recipient_surname
        - comment_money_transfer
        - debt_amount

    MyIncomeListItem:
      type: object
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        debt_id:
          type: integer
        payer_login:
          type: string
        payer_name:
          type: string
        payer_surname:
          type: string
        debt_status_name:
          type: string
          default: не оплачен
        debt_amount:
          type: number
          format: float
          minimum: 0
          example: 123.50
      required:
        - event_id
        - event_name
        - debt_id
        - payer_login
        - payer_name
        - payer_surname
        - debt_amount
