openapi: 3.1.0
info:
  title: "Сервис помощи организации частных мероприятий"
  description: Тип - веб-приложение. Задачи - позволяет пользователям совместно планировать события, делить задачи, распределять расходы и отслеживать обязательства.
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /auth/register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен пользователя
        '409':
          description: Пользователь уже зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Пользователь с таким логином уже существует. Пользователь с такой почтой уже существует
  /auth/login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Пользователь авторизовался
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен пользователя
        '401':
          description: Пользователь указал неверный логин или пароль
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Неверный логин или пароль
  /events:
    get:
      summary: Получить список мероприятий
      description: Возвращает список всех мероприятий пользователя
      responses:
        '200':
          description: Список мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /create_event:
    post:
      summary: Создать новое мероприятие
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Мероприятие успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /find_event/{event_id}:
    get:
      summary: Поиск мероприятия по идентификатору
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Карточка мероприятия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Мероприятие не найдено"

  /join_event_request/{event_id}:
    post:
      summary: Отправка заявки для присоединения к мероприятию
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Заявка на присоединение отправлена
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Повторное присоединение к мероприятию
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Вы уже присоединены к данному мероприятию"

  /profile:
    get:
      summary: Вход в личный профиль
      responses:
        '200':
          description: Данные профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    patch:
      summary: Редактирование профиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEditor'
      responses:
        '201':
          description: Данные профиля изменены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditor'
        '409':
          description: Пользователь с такой почтой уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Пользователь с такой почтой уже существует"

  /leave_event/{event_id}:
    delete:
      summary: Участник или организатор покидает мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Участник или организатор покинул мероприятие
          content:
            application/json:
              schema:
                type: string
        '410':
          description: Не удалось покинуть мероприятие
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /delete_event/{event_id}:
    delete:
      summary: Создатель удаляет мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Создатель удалил мероприятие
          content:
            application/json:
              schema:
                type: string
        '410':
          description: Не удалось удалить мероприятие
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /complete_event/{event_id}:
    patch:
      summary: Создатель завершает мероприятие
      responses:
        '200':
          description: Создатель удалил мероприятие
          content:
            application/json:
              schema:
                type: string
        '410':
          description: Не удалось завершить мероприятие
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /events/{event_id}:
    get:
      summary: Зайти в карточку мероприятия
      responses:
        '200':
          description: Данные мероприятия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Мероприятие не найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /events/{event_id}/edit:
    patch:
      summary: Создатель редактирует мероприятие
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEditor'
      responses:
        '201':
          description: Данные мероприятия изменены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEditor'


  /events/{event_id}/participants_list:
    get:
      summary: Получить список участников мероприятия
      description: Возвращает список всех участников мероприятия
      responses:
        '200':
          description: Список участников
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '410':
          description: Не удалось просмотреть список участников
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /events/{event_id}/participants_list/add_participant:
    get:
      summary: Найти первые 10 пользователей для добавления
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
        - in: query
          name: text
          required: true
          description: Текст из поисковой строки
          schema:
            type: string
        - in: query
          name: seq
          required: true
          description: Порядковый номер "пачки" участников
          schema:
            type: integer
      responses:
        '200':
          description: Пачка участников
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    login:
                      required: true
                      type: string
                      minLength: 3
                      maxLength: 20
                      example: main_player
                    email:
                      required: true
                      type: string
                      minLength: 1
                      maxLength: 254
                      example: poposh01@mail.ru
                    name:
                      required: true
                      type: string
                      minLength: 1
                      maxLength: 20
                      example: Алина
                    surname:
                      required: true
                      type: string
                      minLength: 1
                      maxLength: 50
                      example: Смирнов
        '400':
          description: Неверные параметры запроса
        '404':
          description: Пользователь не найден
    post:
      summary: Добавить выбранных участников
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                description: Логин участник
                type: string
                minLength: 3
                maxLength: 20
                example: main_player
      responses:
        '200':
          description: Участники успешно добавлены
        '400':
          description: Неверный формат данных или некорректные логины
        '404':
          description: Событие не найдено

  /events/{event_id}/purchases_list:
    get:
      summary: Получить список покупок
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Список покупок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purchase'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Мероприятие не найдено"


  /events/{event_id}/purchases_list/add_purchase:
    post:
      summary: Добавить новую позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchase_name:
                  required: true
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: Огурцы
                purchase_description:
                  required: false
                  type: string
                  maxLength: 254
                  example: Купите 2 кг
                responsible_user:
                  required: false
                  type: string
                  minLength: 3
                  maxLength: 20
                  example: main_player
      responses:
        '201':
          description: Позиция покупки успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Мероприятие не найдено"

  /events/{event_id}/purchases_list/edit_purchase/{purchase_id}:
    patch:
      summary: Добавить новую позицию покупки
      parameters:
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchase_name:
                  required: true
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: Огурцы
                purchase_description:
                  required: false
                  type: string
                  maxLength: 254
                  example: Купите 2 кг
                responsible_user:
                  required: false
                  type: string
                  minLength: 3
                  maxLength: 20
                  example: main_player
      responses:
        '201':
          description: Позиция покупки успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        '404':
          description: Мероприятие с данным идентификатором не найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "Мероприятие не найдено"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    # Мероприятие
    Event:
      type: object
      required:
        - event_id
        - event_name
        - event_date
#        - status
      properties:
        event_id:
          type: integer
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        event_description:
          type: string
          maxLength: 254
          example: Берите пледы и хорошее настроение!
          default: "Описание не добавлено"
        event_status_name:
          type: string
          example: активно
        location:
          type: string
          maxLength: 100
          example: Центральный парк
          default: "место не указано"
        event_date:
          type: string
          format: date
          example: "2025-06-12"
          description: Дата в формате YYYY-MM-DD
        event_time:
          type: string
          format: time
          example: "16:00"
          x-format: HH:MM  #кастомное расширение
          default: "время не указано"
        chat_link:
          type: string
          maxLength: 32
          example: "https://t.me/chat_id"
          default: "не прикреплена"
        role_name:
          type: string
          example: "участник"

    # Редактирование мероприятия
    EventEditor:
      type: object
      properties:
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Шашлыки
        event_description:
          type: string
          maxLength: 254
          example: Берите пледы и хорошее настроение!
          default: "Описание не добавлено"
        location:
          type: string
          maxLength: 100
          example: Центральный парк
          default: "место не указано"
        event_date:
          type: string
          format: date
          example: "2025-06-12"
          description: Дата в формате YYYY-MM-DD
        event_time:
          type: string
          format: time
          example: "16:00"
          x-format: HH:MM  #кастомное расширение
          default: "время не указано"
        chat_link:
          type: string
          maxLength: 32
          example: "https://t.me/chat_id"
          default: "не прикреплена"

   # Пользователь
    User:
      type: object
      properties:
#        user_id:
#          type: integer
#          example: 1123
        login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        password:
          type: string
          minLength: 8
          maxLength: 20
          example: An1@!#fhv11
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"
      required:
#        - user_id
        - login
#        - password
        - email
        - name
        - surname

    UserProfile:
      type: object
      required:
        - login
        - email
        - name
        - surname
      properties:
        login:
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"

    UserEditor:
      type: object
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
        comment_money_transfer:
          type: string
          maxLength: 254
          example: "На сбер: 89996362576"
    UserDemo:
      type: object
      properties:
        login:
          required: true
          type: string
          minLength: 3
          maxLength: 20
          example: main_player
        email:
          required: true
          type: string
          minLength: 1
          maxLength: 254
          example: poposh01@mail.ru
        name:
          required: true
          type: string
          minLength: 1
          maxLength: 20
          example: Алина
        surname:
          required: true
          type: string
          minLength: 1
          maxLength: 50
          example: Смирнов
    # Задача
    Task:
      type: object
      properties:
        task_id:
          type: integer
          example: 143
        task_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Заказать торт
        task_description:
          type: string
          maxLength: 254
          example: Торт без орехов и без апельсина
          default: "Описание не добавлено"
        status_id:
          type: integer
          example: 2
        event_id:
          type: integer
          example: 1123
        responsible_user:
          type: integer
          example: 1234
          default: "Не назначен"
        deadline_date:
          type: string
          format: date
          example: 12.06.2025
        deadline_time:
          type: string
          format: time
          example: 16:00
      required:
        - task_id
        - task_name
        - status_id
        - event_id
    # Покупка
    Purchase:
      type: object
      properties:
        purchase_id:
          type: integer
          example: 1
        purchase_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Огурцы
        purchase_description:
          type: string
          maxLength: 254
          example: Купите 2кг
        cost:
          type: number
          format: float
          example: 123.99
        responsible_user:
          type: integer
          example: 11238
        event_id:
          type: integer
          example: 1123
      required:
        - purchase_id
        - name
        - event_id
    # Чек
    Receipt:
      type: object
      properties:
        receipt_id:
          type: integer
          example: 1
        file_path:
          type: string
          example: /home/user1234/public_html/images/file.png
      required:
        - receipt_id
        - file_path
    # Пользователи-мероприятия
    EventUserList:
      type: object
      properties:
        event_user_list_id:
          type: integer
          example: 1
        event_id:
          type: integer
          example: 1123
        user_id:
          type: integer
          example: 1123
        role_id:
          type: integer
          example: 1
      required:
        - event_user_list_id
        - event_id
        - user_id
        - role_id
    # Вещь
    Stuff:
      type: object
      required:
        - stuff_id
        - event_id
        - stuff_name
        - responsible_user
      properties:
        stuff_id:
          type: integer
        stuff_name:
          type: string
          minLength: 1
          maxLength: 50
          example: Веревка
        stuff_description:
          type: string
          maxLength: 254
          example: 5 метров, канатная
          default: "Описание не добавлено"
        event_id:
          type: integer
        responsible_user:
          type: integer
    # Долг
    Debt:
      type: object
      required:
        - debt_id
        - event_id
        - payer_id
        - recipient_id
        - status_id
        - debt_amount
      properties:
        debt_id:
          type: integer
        payer_id:
          type: integer
        recipient_id:
          type: integer
        status_id:
          type: integer
        debt_amount:
          type: number
          format: float
          minimum: 0
          example: 123.50
        event_id:
          type: integer
